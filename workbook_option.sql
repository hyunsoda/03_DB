SELECT * FROM TB_CLASS;
SELECT * FROM TB_CLASS_PROFESSOR;
SELECT * FROM TB_DEPARTMENT;
SELECT * FROM TB_PROFESSOR;
SELECT * FROM TB_STUDENT;
SELECT * FROM TB_GRADE;

-- 1. 
SELECT STUDENT_NAME "학생 이름", STUDENT_ADDRESS "주소지" FROM TB_STUDENT
ORDER BY STUDENT_NAME ;

-- 2.
SELECT STUDENT_NAME, STUDENT_SSN  FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY STUDENT_SSN DESC;

-- 3.
SELECT STUDENT_NAME 학생이름, STUDENT_NO 학번, STUDENT_ADDRESS "거주지 주소" FROM TB_STUDENT
WHERE (STUDENT_ADDRESS LIKE '경기도%' OR STUDENT_ADDRESS LIKE '강원도%')
AND STUDENT_NO LIKE '9%'
ORDER BY STUDENT_NAME ;

-- 4.
SELECT PROFESSOR_NAME, PROFESSOR_SSN FROM TB_PROFESSOR 
WHERE DEPARTMENT_NO = 5
ORDER BY PROFESSOR_SSN ;

-- 5.
SELECT STUDENT_NO, POINT FROM TB_GRADE
WHERE TERM_NO ='200402'
AND CLASS_NO = 'C3118100'
ORDER BY POINT DESC,
STUDENT_NO ASC;

-- 6.
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME 
FROM TB_STUDENT 
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
ORDER BY STUDENT_NAME;

-- 7.
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
LEFT JOIN TB_DEPARTMENT USING (DEPARTMENT_NO);

-- 8.
SELECT CLASS_NAME, PROFESSOR_NAME 
FROM TB_CLASS 
JOIN TB_CLASS_PROFESSOR USING (CLASS_NO)
JOIN TB_PROFESSOR USING (PROFESSOR_NO);

-- 9.
SELECT CLASS_NAME, PROFESSOR_NAME 
FROM TB_CLASS C
JOIN TB_CLASS_PROFESSOR  USING (CLASS_NO)
JOIN TB_PROFESSOR USING (PROFESSOR_NO)
WHERE C.DEPARTMENT_NO BETWEEN '001' AND '021';

-- 10.
SELECT STUDENT_NO 학번, STUDENT_NAME "학생 이름", ROUND(AVG(POINT),1) "전체 평점" 
FROM TB_STUDENT 
JOIN TB_GRADE USING (STUDENT_NO)
WHERE DEPARTMENT_NO = '059'
GROUP BY STUDENT_NO, STUDENT_NAME
ORDER BY STUDENT_NO ;

-- 11.
SELECT DEPARTMENT_NAME 학과이름, STUDENT_NAME 학생이름, PROFESSOR_NAME 지도교수이름
FROM TB_DEPARTMENT
JOIN TB_STUDENT USING(DEPARTMENT_NO)
JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
WHERE STUDENT_NO = 'A313047';

-- 12.
SELECT STUDENT_NAME, TERM_NO "TERM_NAME"
FROM TB_STUDENT
JOIN TB_GRADE G USING (STUDENT_NO)
JOIN TB_CLASS USING (CLASS_NO)
WHERE SUBSTR(TERM_NO,1,4) = '2007'
AND CLASS_NAME = '인간관계론'
ORDER BY STUDENT_NAME;


-- 13.
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS C
FULL JOIN TB_CLASS_PROFESSOR USING (CLASS_NO)
FULL JOIN TB_PROFESSOR USING (PROFESSOR_NO)
FULL JOIN TB_DEPARTMENT D ON (C.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE CATEGORY = '예체능'
AND PROFESSOR_NO IS NULL;

		-- 예시답안

SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS 
LEFT JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE CATEGORY = '예체능'
AND PROFESSOR_NO IS NULL;


-- 14.
SELECT STUDENT_NAME 학생이름, NVL(PROFESSOR_NAME, '지도교수 미지정') 지도교수
FROM TB_STUDENT S
LEFT JOIN TB_PROFESSOR ON (PROFESSOR_NO = COACH_PROFESSOR_NO)
WHERE S.DEPARTMENT_NO = '020'
ORDER BY STUDENT_NO;

	-- 예시답안
SELECT STUDENT_NAME 학생이름, NVL(PROFESSOR_NAME, '지도교수 미지정') 지도교수
FROM TB_STUDENT S
LEFT JOIN TB_PROFESSOR P ON (PROFESSOR_NO = COACH_PROFESSOR_NO)
JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '서반아어학과'
ORDER BY STUDENT_NO;

-- 15.
SELECT STUDENT_NO 학번, STUDENT_NAME 이름, DEPARTMENT_NAME "학과 이름", AVG(POINT) 평점
FROM TB_STUDENT 
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
JOIN TB_GRADE USING (STUDENT_NO)
WHERE ABSENCE_YN = 'N'
GROUP BY STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
HAVING AVG(POINT) >= 4.0 
ORDER BY STUDENT_NO;


-- 16.
SELECT CLASS_NO, CLASS_NAME , TRUNC(AVG(POINT),8) "AVG(POINT)" 
FROM TB_CLASS 
JOIN TB_GRADE USING (CLASS_NO)
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE DEPARTMENT_NAME LIKE '환경조경%'
AND CLASS_TYPE LIKE '전공%'
GROUP BY CLASS_NO, CLASS_NAME 
ORDER BY CLASS_NO ;


-- 17.
SELECT STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT 
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO FROM TB_STUDENT WHERE STUDENT_NAME = '최경희');

-- 18.
SELECT STUDENT_NO, STUDENT_NAME
FROM (SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME, AVG(POINT) 평점 FROM TB_STUDENT 
			JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
			JOIN TB_GRADE USING (STUDENT_NO) 
			GROUP BY STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
			ORDER BY 평점 DESC)
WHERE DEPARTMENT_NAME LIKE '국어국문%'
AND ROWNUM = 1;

-- 19.
SELECT DEPARTMENT_NAME "계열 학과명", TRUNC( AVG(POINT),1 ) "전공평점"
FROM TB_DEPARTMENT 
JOIN TB_STUDENT USING (DEPARTMENT_NO) 
JOIN TB_GRADE USING (STUDENT_NO)
WHERE CATEGORY = (SELECT CATEGORY FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME  = '환경조경학과' )
GROUP BY DEPARTMENT_NAME
ORDER BY DEPARTMENT_NAME ;
			-- TRUNC 절삭하기	

